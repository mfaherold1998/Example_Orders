/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClientDto;
import org.openapitools.client.model.ProductDto;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OrdineDto
 */
@JsonPropertyOrder({
  OrdineDto.JSON_PROPERTY_ID,
  OrdineDto.JSON_PROPERTY_DATE_ORDINE,
  OrdineDto.JSON_PROPERTY_TOTAL,
  OrdineDto.JSON_PROPERTY_CLI,
  OrdineDto.JSON_PROPERTY_PRODS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-18T14:37:22.823946236Z[Etc/UTC]", comments = "Generator version: 7.10.0-SNAPSHOT")
public class OrdineDto {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_DATE_ORDINE = "dateOrdine";
  @jakarta.annotation.Nullable
  private OffsetDateTime dateOrdine;

  public static final String JSON_PROPERTY_TOTAL = "total";
  @jakarta.annotation.Nonnull
  private Double total;

  public static final String JSON_PROPERTY_CLI = "cli";
  @jakarta.annotation.Nullable
  private ClientDto cli;

  public static final String JSON_PROPERTY_PRODS = "prods";
  @jakarta.annotation.Nonnull
  private List<ProductDto> prods = new ArrayList<>();

  public OrdineDto() {
  }

  public OrdineDto id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }

  public OrdineDto dateOrdine(@jakarta.annotation.Nullable OffsetDateTime dateOrdine) {
    
    this.dateOrdine = dateOrdine;
    return this;
  }

  /**
   * Get dateOrdine
   * @return dateOrdine
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_ORDINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOrdine() {
    return dateOrdine;
  }


  @JsonProperty(JSON_PROPERTY_DATE_ORDINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOrdine(@jakarta.annotation.Nullable OffsetDateTime dateOrdine) {
    this.dateOrdine = dateOrdine;
  }

  public OrdineDto total(@jakarta.annotation.Nonnull Double total) {
    
    this.total = total;
    return this;
  }

  /**
   * Get total
   * minimum: 0
   * @return total
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(@jakarta.annotation.Nonnull Double total) {
    this.total = total;
  }

  public OrdineDto cli(@jakarta.annotation.Nullable ClientDto cli) {
    
    this.cli = cli;
    return this;
  }

  /**
   * Get cli
   * @return cli
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClientDto getCli() {
    return cli;
  }


  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCli(@jakarta.annotation.Nullable ClientDto cli) {
    this.cli = cli;
  }

  public OrdineDto prods(@jakarta.annotation.Nonnull List<ProductDto> prods) {
    
    this.prods = prods;
    return this;
  }

  public OrdineDto addProdsItem(ProductDto prodsItem) {
    if (this.prods == null) {
      this.prods = new ArrayList<>();
    }
    this.prods.add(prodsItem);
    return this;
  }

  /**
   * Get prods
   * @return prods
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProductDto> getProds() {
    return prods;
  }


  @JsonProperty(JSON_PROPERTY_PRODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProds(@jakarta.annotation.Nonnull List<ProductDto> prods) {
    this.prods = prods;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdineDto ordineDto = (OrdineDto) o;
    return Objects.equals(this.id, ordineDto.id) &&
        Objects.equals(this.dateOrdine, ordineDto.dateOrdine) &&
        Objects.equals(this.total, ordineDto.total) &&
        Objects.equals(this.cli, ordineDto.cli) &&
        Objects.equals(this.prods, ordineDto.prods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateOrdine, total, cli, prods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdineDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateOrdine: ").append(toIndentedString(dateOrdine)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    cli: ").append(toIndentedString(cli)).append("\n");
    sb.append("    prods: ").append(toIndentedString(prods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

